/**
 * Button
 */

// Reboot based on :
// - normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css
// - sanitize.css v13.0.0 | CC0 1.0 Universal | github.com/csstools/sanitize.css
// ––––––––––––––––––––

// 1. Change the font styles in all browsers
// 2. Remove the margin on controls in Safari
// 3. Show the overflow in Edge
button {
  margin: 0; // 2
  overflow: visible; // 3
  font-family: inherit; // 1
  text-transform: none; // 1
}

// Correct the inability to style buttons in iOS and Safari
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

// Pico
// ––––––––––––––––––––

button {
  margin-bottom: var(--spacing);
}

[role="button"] {
  text-decoration: none;
}

button,
input[type="submit"],
input[type="button"],
input[type="reset"],
[role="button"] {
  display: inline-block;
  width: auto;
  padding: 0.5em 1.5em;
  border: 1px solid #{$green-700};
  border-radius: 2.5rem;
  outline: none;
  background-color: #{$green-700};
  color: var(--primary-inverse) !important;
  font-weight: 400;
  font-size: 1rem;
  line-height: var(--line-height);
  text-align: center;
  cursor: pointer;

  transition: background-color var(--transition), border-color var(--transition), color var(--transition);

  &:is([aria-current], :hover, :active) {
    background-color: var(--primary-hover);
    border-color: var(--primary-hover);
  }

  &:focus {
    border-color: var(--primary-focus) !important;
    background-color: var(--primary-focus) !important;
    color: #{$white} !important;
  }
}

// .secondary, .contrast & .outline

// Secondary
:is(button, input[type="submit"], input[type="button"], [role="button"]).secondary,
input[type="reset"] {
  background-color: transparent;
  border-color: var(--secondary);
  color: var(--secondary-inverse) !important;
  cursor: pointer;

  &:is([aria-current], :hover, :active) {
    background-color: transparent;
    border-color: var(--secondary-hover);
    color: var(--secondary-hover) !important;
  }

  &:focus {
    border-color: var(--primary-focus) !important;
    background-color: var(--primary-focus) !important;
    color: #{$white} !important;
  }
}

// Contrast
:is(button, input[type="submit"], input[type="button"], [role="button"]).contrast {
  background-color: var(--contrast);
  border-color: var(--contrast);
  color: var(--contrast-inverse) !important;

  &:is([aria-current], :hover, :active) {
    background-color: var(--contrast-hover);
    border-color: var(--contrast-hover);
    color: var(--contrast-inverse) !important;
  }

  &:focus {
    border-color: var(--primary-focus) !important;
    background-color: var(--primary-focus) !important;
    color: #{$white} !important;
  }
}

// Outline
:is(button, input[type="submit"], input[type="button"], [role="button"]).outline,
input[type="reset"].outline {
  background-color: transparent;
  border-color: var(--primary);
  color: var(--secondary-inverse) !important;

  &:is([aria-current], :hover, :active) {
    background-color: var(--primary-hover);
    border-color: var(--primary-hover);
    color: var(--primary-inverse) !important;
  }

  &:focus {
    border-color: var(--primary-focus) !important;
    background-color: var(--primary-focus) !important;
    color: #{$white} !important;
  }
}

// Button [disabled]
// Links without href are disabled by default
:where(button, [type="submit"], [type="button"], [type="reset"], [role="button"])[disabled],
:where(fieldset[disabled]) :is(button, [type="submit"], [type="button"], [type="reset"], [role="button"]),
a[role="button"]:not([href]) {
  opacity: 0.5;
  pointer-events: none;
}

.ds-button-group {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  margin-bottom: var(--spacing);

  & > button,
  & > input,
  & > a {
    border-radius: 0;
    display: block;
    margin: 0;

    &:first-child {
      min-width: 3.25rem;
      border-radius: 2.5rem 0 0 2.5rem;
      &::before {
        left: auto;
        right: 0.25rem;
      }
    }

    &:last-child {
      min-width: 3.25rem;
      border-radius: 0 2.5rem 2.5rem 0;
      &::before {
        right: auto;
        left: 0.25rem;
      }
    }
  }
}


// Icon buttons

button, 
input[type="submit"], 
input[type="button"],
[role="button"] {
  
  &[class*="ds-icon-"] {

    padding: 0.5rem 1.5rem 0.5rem 3rem;
    
    // We assume that a button with `title` attribute only displays the icon
    &[title] {
      width: 3rem;
      background-position: center center;
      padding: 0.5rem 1.5rem;
    }

    &::before {
      filter: var(--icon-filter-standard);
    }

    &.secondary::before {
      filter: var(--icon-filter-secondary);
    }

    &.secondary:hover::before,
    &.secondary:active::before {
      filter: var(--icon-filter-secondary-hover);
    }
  
    &.outline::before {
      filter: var(--icon-filter-outline);
    }

    &.outline:hover::before,
    &.outline:active::before {
      filter: var(--icon-filter-outline-hover);
    }
  
    &.contrast::before {
      filter: var(--icon-filter-contrast);
    }

    &.contrast:hover::before,
    &.contrast:active::before {
      filter: var(--icon-filter-contrast-hover);
    }

    &:focus::before {
      filter: var(--icon-filter-standard) !important;
    }
  }
}
